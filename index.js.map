{"version":3,"file":"./index.js","mappings":"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","sources":["webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///./scripts/config.js","webpack:///./scripts/settings.js","webpack:///./scripts/main.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","import { MODULE_ID } from \"./main.js\";\r\n\r\nconst ECHItems = {};\r\n\r\nexport function initConfig() {\r\n\r\n    Hooks.on(\"updateItem\", (item) => {\r\n        if(item.parent === ui.ARGON._actor && ui.ARGON.rendered) ui.ARGON.components.portrait.refresh()\r\n    })\r\n\r\n    Hooks.on(\"argonInit\", (CoreHUD) => {\r\n        if (game.system.id !== \"dnd5e\") return;\r\n        registerItems();\r\n        const ARGON = CoreHUD.ARGON;\r\n\r\n        class DND5eTooltip extends ARGON.CORE.Tooltip {\r\n            get classes() {\r\n                const original = super.classes;\r\n                return original.concat([\"dnd5e2\"]);\r\n            }\r\n        }\r\n\r\n        const isMIDI = game.modules.get(\"midi-qol\")?.active;\r\n        const getMidiFlag = (actionType) => {\r\n            if (!isMIDI || !ui.ARGON._actor) return null;\r\n            const flag = ui.ARGON._actor.getFlag(\"midi-qol\", \"actions\") ?? {};\r\n            const value = flag[actionType] ?? false;\r\n            const midiAction = value ? 0 : 1;\r\n            return midiAction;\r\n        };\r\n\r\n        const getActivationType = (item) => {\r\n            if (!item?.system?.activities) {\r\n                return;\r\n            }\r\n            return Array.from(item.system.activities)[0]?.activation?.type;\r\n        };\r\n\r\n        const getActionType = (item) => {\r\n            if (!item?.system?.activities) {\r\n                return;\r\n            }\r\n            return Array.from(item.system.activities)[0]?.actionType;\r\n        };\r\n\r\n        const actionTypes = {\r\n            action: [\"action\"],\r\n            bonus: [\"bonus\"],\r\n            reaction: [\"reaction\", \"reactiondamage\", \"reactionmanual\"],\r\n            free: [\"special\"],\r\n        };\r\n\r\n        const itemTypes = {\r\n            spell: [\"spell\"],\r\n            feat: [\"feat\"],\r\n            consumable: [\"consumable\", \"equipment\", \"loot\"],\r\n        };\r\n\r\n        const mainBarFeatures = [];\r\n\r\n        if (game.settings.get(MODULE_ID, \"showWeaponsItems\")) itemTypes.consumable.push(\"weapon\");\r\n        if (game.settings.get(MODULE_ID, \"showClassActions\")) mainBarFeatures.push(\"class\");\r\n\r\n        CoreHUD.DND5E = {\r\n            actionTypes,\r\n            itemTypes,\r\n            mainBarFeatures,\r\n            ECHItems,\r\n        };\r\n\r\n        Hooks.callAll(\"enhanced-combat-hud.dnd5e.initConfig\", { actionTypes, itemTypes, ECHItems });\r\n\r\n        async function getTooltipDetails(item, type) {\r\n            let title, description, itemType, subtitle, target, range, dt;\r\n            let damageTypes = [];\r\n            let properties = [];\r\n            let materialComponents = \"\";\r\n\r\n            if (type == \"skill\") {\r\n                title = CONFIG.DND5E.skills[item].label;\r\n                description = game.i18n.localize(`enhancedcombathud-dnd5e.skills.${item}.tooltip`);\r\n            } else if (type == \"save\") {\r\n                title = CONFIG.DND5E.abilities[item].label;\r\n                description = game.i18n.localize(`enhancedcombathud-dnd5e.abilities.${item}.tooltip`);\r\n            } else {\r\n                if (!item || !item.system) return;\r\n\r\n                title = item.name;\r\n                description = item.system.identified ? item.system.description.value : item.system.description.unidentified ?? item.system.description.value;\r\n                itemType = item.type;\r\n                target = item.labels?.target || \"-\";\r\n                range = item.labels?.range || \"-\";\r\n                properties = [];\r\n                dt = item?.labels?.damages?.map(d => d.damageType);\r\n                damageTypes = dt && dt.length ? dt : [];\r\n                materialComponents = \"\";\r\n\r\n                switch (itemType) {\r\n                    case \"weapon\":\r\n                        subtitle = CONFIG.DND5E.weaponTypes[item.system.weaponType];\r\n                        properties.push(CONFIG.DND5E.itemActionTypes[getActionType(item)]);\r\n                        for (let [key, value] of Object.entries(item.system.properties)) {\r\n                            let prop = value && CONFIG.DND5E.weaponProperties[key] ? CONFIG.DND5E.weaponProperties[key] : undefined;\r\n                            if (prop) properties.push(prop);\r\n                        }\r\n                        break;\r\n                    case \"spell\":\r\n                        subtitle = `${item.labels.level} ${item.labels.school}`;\r\n                        properties.push(CONFIG.DND5E.spellSchools[item.system.school]);\r\n                        properties.push(item.labels.duration);\r\n                        properties.push(item.labels.save);\r\n                        for (let comp of item.labels.components.all) {\r\n                            properties.push(comp.abbr);\r\n                        }\r\n                        if (item.labels.materials) materialComponents = item.labels.materials;\r\n                        break;\r\n                    case \"consumable\":\r\n                        subtitle = CONFIG.DND5E.consumableTypes[item.system.consumableType];\r\n                        properties.push(CONFIG.DND5E.itemActionTypes[getActionType(item)]);\r\n                        break;\r\n                    case \"feat\":\r\n                        subtitle = item.system.requirements;\r\n                        properties.push(CONFIG.DND5E.itemActionTypes[getActionType(item)]);\r\n                        break;\r\n                }\r\n            }\r\n\r\n            if (description) description = await TextEditor.enrichHTML(description, { async: true, relativeTo: item.parent });\r\n            let details = [];\r\n            if (target || range) {\r\n                details = [\r\n                    {\r\n                        label: \"enhancedcombathud-dnd5e.tooltip.target.name\",\r\n                        value: target,\r\n                    },\r\n                    {\r\n                        label: \"enhancedcombathud-dnd5e.tooltip.range.name\",\r\n                        value: range,\r\n                    },\r\n                ];\r\n            }\r\n            if (item?.labels?.toHit) {\r\n                details.push({\r\n                    label: \"enhancedcombathud-dnd5e.tooltip.toHit.name\",\r\n                    value: item.labels.toHit,\r\n                });\r\n            }\r\n            if (item?.labels?.damages?.length) {\r\n                let dmgString = \"\";\r\n                item.labels.damages.forEach((dDmg) => {\r\n                    dmgString += dDmg.formula + \" \" + getDamageTypeIcon(dDmg.damageType) + \" \";\r\n                });\r\n                details.push({\r\n                    label: \"enhancedcombathud-dnd5e.tooltip.damage.name\",\r\n                    value: dmgString,\r\n                });\r\n            }\r\n\r\n            const tooltipProperties = [];\r\n            if (damageTypes?.length) damageTypes.forEach((d) => tooltipProperties.push({ label: d, primary: true }));\r\n            if (properties?.length) properties.forEach((p) => tooltipProperties.push({ label: p?.label ?? p, secondary: true }));\r\n            return { title, description, subtitle, details, properties: tooltipProperties, footerText: materialComponents };\r\n        }\r\n\r\n        function getDamageTypeIcon(damageType) {\r\n            damageType ??= \"\";\r\n            switch (damageType.toLowerCase()) {\r\n                case \"acid\":\r\n                    return '<i class=\"fas fa-flask\"></i>';\r\n                case \"bludgeoning\":\r\n                    return '<i class=\"fas fa-hammer\"></i>';\r\n                case \"cold\":\r\n                    return '<i class=\"fas fa-snowflake\"></i>';\r\n                case \"fire\":\r\n                    return '<i class=\"fas fa-fire\"></i>';\r\n                case \"force\":\r\n                    return '<i class=\"fas fa-hand-sparkles\"></i>';\r\n                case \"lightning\":\r\n                    return '<i class=\"fas fa-bolt\"></i>';\r\n                case \"necrotic\":\r\n                    return '<i class=\"fas fa-skull\"></i>';\r\n                case \"piercing\":\r\n                    return '<i class=\"fas fa-crosshairs\"></i>';\r\n                case \"poison\":\r\n                    return '<i class=\"fas fa-skull-crossbones\"></i>';\r\n                case \"psychic\":\r\n                    return '<i class=\"fas fa-brain\"></i>';\r\n                case \"radiant\":\r\n                    return '<i class=\"fas fa-sun\"></i>';\r\n                case \"slashing\":\r\n                    return '<i class=\"fas fa-cut\"></i>';\r\n                case \"thunder\":\r\n                    return '<i class=\"fas fa-bell\"></i>';\r\n                case \"healing\":\r\n                    return '<i class=\"fas fa-heart\"></i>';\r\n                default:\r\n                    return '<i class=\"fas fa-sparkles\"></i>';\r\n            }\r\n        }\r\n\r\n        function getProficiencyIcon(proficiency) {\r\n            if (proficiency == 0) return '<i style=\"margin-right: 1ch; pointer-events: none\" class=\"far fa-circle\"> </i>';\r\n            else if (proficiency == 1) return '<i style=\"margin-right: 1ch; pointer-events: none\" class=\"fas fa-check\"> </i>';\r\n            else if (proficiency == 2) return '<i style=\"margin-right: 1ch; pointer-events: none\" class=\"fas fa-check-double\"> </i>';\r\n            else if (proficiency == 0.5) return '<i style=\"margin-right: 1ch; pointer-events: none\" class=\"fas fa-adjust\"> </i>';\r\n            else return '<i style=\"margin-right: 1ch; pointer-events: none\" class=\"far fa-circle\"> </i>';\r\n        }\r\n\r\n        function condenseItemButtons(items) {\r\n            const condenseClassActions = game.settings.get(MODULE_ID, \"condenseClassActions\");\r\n            if (!condenseClassActions) return items.map((item) => new DND5eItemButton({ item, inActionPanel: true }));\r\n            const condensedItems = [];\r\n            const barItemsLength = items.length;\r\n            const barItemsMultipleOfTwo = barItemsLength - (barItemsLength % 2);\r\n            let currentSplitButtonItemButton = null;\r\n            for (let i = 0; i < barItemsLength; i++) {\r\n                const isCondensedButton = i < barItemsMultipleOfTwo;\r\n                const item = items[i];\r\n                if (isCondensedButton) {\r\n                    if (currentSplitButtonItemButton) {\r\n                        const button = new DND5eItemButton({ item, inActionPanel: false });\r\n                        condensedItems.push(new ARGON.MAIN.BUTTONS.SplitButton(currentSplitButtonItemButton, button));\r\n                        currentSplitButtonItemButton = null;\r\n                    } else {\r\n                        currentSplitButtonItemButton = new DND5eItemButton({ item, inActionPanel: false });\r\n                    }\r\n                } else {\r\n                    condensedItems.push(new DND5eItemButton({ item, inActionPanel: true }));\r\n                }\r\n            }\r\n            return condensedItems;\r\n        }\r\n\r\n        class DND5ePortraitPanel extends ARGON.PORTRAIT.PortraitPanel {\r\n            constructor(...args) {\r\n                super(...args);\r\n            }\r\n\r\n            get description() {\r\n                const { type, system } = this.actor;\r\n                const actor = this.actor;\r\n                const isNPC = type === \"npc\";\r\n                const isPC = type === \"character\";\r\n                if (isNPC) {\r\n                    const creatureType = game.i18n.localize(CONFIG.DND5E.creatureTypes[actor.system.details.type.value]?.label ?? actor.system.details.type.custom);\r\n                    const cr = system.details.cr >= 1 || system.details.cr <= 0 ? system.details.cr : `1/${1 / system.details.cr}`;\r\n                    return `CR ${cr} ${creatureType}`;\r\n                } else if (isPC) {\r\n                    const classes = Object.values(actor.classes)\r\n                        .map((c) => c.name)\r\n                        .join(\" / \");\r\n                    return `Level ${system.details.level} ${classes} (${system.details.race})`;\r\n                } else {\r\n                    return \"\";\r\n                }\r\n            }\r\n\r\n            get isDead() {\r\n                return this.isDying && this.actor.type !== \"character\";\r\n            }\r\n\r\n            get isDying() {\r\n                return this.actor.system.attributes.hp.value <= 0;\r\n            }\r\n\r\n            get successes() {\r\n                return this.actor.system.attributes?.death?.success ?? 0;\r\n            }\r\n\r\n            get failures() {\r\n                return this.actor.system.attributes?.death?.failure ?? 0;\r\n            }\r\n\r\n            get configurationTemplate() {\r\n                return \"modules/enhancedcombathud-dnd5e/templates/argon-actor-config.hbs\";\r\n            }\r\n\r\n            async _onDeathSave(event) {\r\n                this.actor.rollDeathSave({});\r\n            }\r\n\r\n            async getStatBlocks() {\r\n                const HPText = game.i18n\r\n                    .localize(\"DND5E.HitPoints\")\r\n                    .split(\" \")\r\n                    .map((word) => word.charAt(0).toUpperCase())\r\n                    .join(\"\");\r\n                const ACText = game.i18n\r\n                    .localize(\"DND5E.ArmorClass\")\r\n                    .split(\" \")\r\n                    .map((word) => word.charAt(0).toUpperCase())\r\n                    .join(\"\");\r\n                const SpellDC = game.i18n.localize(\"DND5E.SaveDC\").replace(\"{ability}\", \"\").replace(\"{dc}\", \"\").trim();\r\n\r\n                const hpColor = this.actor.system.attributes.hp.temp ? \"#6698f3\" : \"rgb(0 255 170)\";\r\n                const tempMax = this.actor.system.attributes.hp.tempmax;\r\n                const hpMaxColor = tempMax ? (tempMax > 0 ? \"rgb(222 91 255)\" : \"#ffb000\") : \"rgb(255 255 255)\";\r\n\r\n                return [\r\n                    [\r\n                        {\r\n                            text: `${this.actor.system.attributes.hp.value + (this.actor.system.attributes.hp.temp ?? 0)}`,\r\n                            color: hpColor,\r\n                        },\r\n                        {\r\n                            text: `/`,\r\n                        },\r\n                        {\r\n                            text: `${this.actor.system.attributes.hp.max + (this.actor.system.attributes.hp.tempmax ?? 0)}`,\r\n                            color: hpMaxColor,\r\n                        },\r\n                        {\r\n                            text: HPText,\r\n                        },\r\n                    ],\r\n                    [\r\n                        {\r\n                            text: ACText,\r\n                        },\r\n                        {\r\n                            text: this.actor.system.attributes.ac.value,\r\n                            color: \"var(--ech-movement-baseMovement-background)\",\r\n                        },\r\n                    ],\r\n                    [\r\n                        {\r\n                            text: SpellDC,\r\n                        },\r\n                        {\r\n                            text: this.actor.system.attributes.spell.dc,\r\n                            color: \"var(--ech-movement-baseMovement-background)\",\r\n                        },\r\n                    ],\r\n                ];\r\n            }\r\n        }\r\n\r\n        class DND5eDrawerButton extends ARGON.DRAWER.DrawerButton {\r\n            constructor(buttons, item, type) {\r\n                super(buttons);\r\n                this.item = item;\r\n                this.type = type;\r\n            }\r\n\r\n            get hasTooltip() {\r\n                return true;\r\n            }\r\n\r\n            get tooltipOrientation() {\r\n                return TooltipManager.TOOLTIP_DIRECTIONS.RIGHT;\r\n            }\r\n\r\n            async getTooltipData() {\r\n                const tooltipData = await getTooltipDetails(this.item, this.type);\r\n                return tooltipData;\r\n            }\r\n        }\r\n\r\n        class DND5eDrawerPanel extends ARGON.DRAWER.DrawerPanel {\r\n            constructor(...args) {\r\n                super(...args);\r\n            }\r\n\r\n            get categories() {\r\n                const abilities = this.actor.system.abilities;\r\n                const skills = this.actor.system.skills;\r\n                const tools = this.actor.itemTypes.tool;\r\n\r\n                const addSign = (value) => {\r\n                    if (value >= 0) return `+${value}`;\r\n                    return value;\r\n                };\r\n\r\n                const abilitiesButtons = Object.keys(abilities).map((ability) => {\r\n                    const abilityData = abilities[ability];\r\n                    return new DND5eDrawerButton(\r\n                        [\r\n                            {\r\n                                label: CONFIG.DND5E.abilities[ability].label,\r\n                                onClick: (event) => this.actor.rollAbilityCheck({ ability, event }),\r\n                            },\r\n                            {\r\n                                label: addSign(abilityData.mod + (abilityData.checkBonus || 0)),\r\n                                onClick: (event) => this.actor.rollAbilityCheck({ ability, event }),\r\n                            },\r\n                            {\r\n                                label: addSign(abilityData.save.value),\r\n                                onClick: (event) => this.actor.rollSavingThrow({ ability, event }),\r\n                            },\r\n                        ],\r\n                        ability,\r\n                        \"save\",\r\n                    );\r\n                });\r\n\r\n                const skillsButtons = Object.keys(skills).map((skill) => {\r\n                    const skillData = skills[skill];\r\n                    return new DND5eDrawerButton(\r\n                        [\r\n                            {\r\n                                label: getProficiencyIcon(skillData.proficient) + CONFIG.DND5E.skills[skill].label,\r\n                                onClick: (event) => this.actor.rollSkill({ skill, event }),\r\n                            },\r\n                            {\r\n                                label: `${addSign(skillData.total)}<span style=\"margin: 0 1rem; filter: brightness(0.8)\">(${skillData.passive})</span>`,\r\n                                style: \"display: flex; justify-content: flex-end;\",\r\n                            },\r\n                        ],\r\n                        skill,\r\n                        \"skill\",\r\n                    );\r\n                });\r\n\r\n                const toolButtons = tools.map((tool) => {\r\n                    return new DND5eDrawerButton(\r\n                        [\r\n                            {\r\n                                label: getProficiencyIcon(tool.system.proficient) + tool.name,\r\n                                onClick: (event) => tool.rollToolCheck({ event }),\r\n                            },\r\n                            {\r\n                                label: addSign(abilities[tool.abilityMod].mod + tool.system.proficiencyMultiplier * this.actor.system.attributes.prof),\r\n                            },\r\n                        ],\r\n                        tool,\r\n                    );\r\n                });\r\n\r\n                return [\r\n                    {\r\n                        gridCols: \"5fr 2fr 2fr\",\r\n                        captions: [\r\n                            {\r\n                                label: \"Abilities\",\r\n                                align: \"left\",\r\n                            },\r\n                            {\r\n                                label: \"Check\",\r\n                                align: \"center\",\r\n                            },\r\n                            {\r\n                                label: \"Save\",\r\n                                align: \"center\",\r\n                            },\r\n                        ],\r\n                        align: [\"left\", \"center\", \"center\"],\r\n                        buttons: abilitiesButtons,\r\n                    },\r\n                    {\r\n                        gridCols: \"7fr 2fr\",\r\n                        captions: [\r\n                            {\r\n                                label: \"Skills\",\r\n                            },\r\n                            {\r\n                                label: \"\",\r\n                            },\r\n                        ],\r\n                        buttons: skillsButtons,\r\n                    },\r\n                    {\r\n                        gridCols: \"7fr 2fr\",\r\n                        captions: [\r\n                            {\r\n                                label: \"Tools\",\r\n                            },\r\n                            {\r\n                                label: \"\",\r\n                            },\r\n                        ],\r\n                        buttons: toolButtons,\r\n                    },\r\n                ];\r\n            }\r\n\r\n            get title() {\r\n                return `${game.i18n.localize(\"enhancedcombathud-dnd5e.hud.saves.name\")} / ${game.i18n.localize(\"enhancedcombathud-dnd5e.hud.skills.name\")} / ${game.i18n.localize(\"enhancedcombathud-dnd5e.hud.tools.name\")}`;\r\n            }\r\n        }\r\n\r\n        class DND5eActionActionPanel extends ARGON.MAIN.ActionPanel {\r\n            constructor(...args) {\r\n                super(...args);\r\n            }\r\n\r\n            get label() {\r\n                return \"DND5E.Action\";\r\n            }\r\n\r\n            get maxActions() {\r\n                return this.actor?.inCombat ? 1 : null;\r\n            }\r\n\r\n            get currentActions() {\r\n                return getMidiFlag(\"action\") ?? (this.isActionUsed ? 0 : 1);\r\n            }\r\n\r\n            _onNewRound(combat) {\r\n                this.isActionUsed = false;\r\n                this.updateActionUse();\r\n            }\r\n\r\n            async _getButtons() {\r\n                const spellItems = this.actor.items.filter((item) => itemTypes.spell.includes(item.type) && actionTypes.action.includes(getActivationType(item)) && !CoreHUD.DND5E.mainBarFeatures.includes(item.system.type?.value));\r\n                const featItems = this.actor.items.filter((item) => itemTypes.feat.includes(item.type) && actionTypes.action.includes(getActivationType(item)) && !CoreHUD.DND5E.mainBarFeatures.includes(item.system.type?.value));\r\n                const consumableItems = this.actor.items.filter((item) => itemTypes.consumable.includes(item.type) && actionTypes.action.includes(getActivationType(item)) && !CoreHUD.DND5E.mainBarFeatures.includes(item.system.type?.value));\r\n\r\n                const spellButton = !spellItems.length ? [] : [new DND5eButtonPanelButton({ type: \"spell\", items: spellItems, color: 0 })].filter((button) => button.hasContents);\r\n\r\n                const specialActions = Object.values(ECHItems);\r\n\r\n                const showSpecialActions = game.settings.get(MODULE_ID, \"showSpecialActions\");\r\n                const buttons = [];\r\n                if (showSpecialActions) {\r\n                    buttons.push(...[new DND5eItemButton({ item: null, isWeaponSet: true, isPrimary: true }), new ARGON.MAIN.BUTTONS.SplitButton(new DND5eSpecialActionButton(specialActions[0]), new DND5eSpecialActionButton(specialActions[1])), ...spellButton, new DND5eButtonPanelButton({ type: \"feat\", items: featItems, color: 0 }), new ARGON.MAIN.BUTTONS.SplitButton(new DND5eSpecialActionButton(specialActions[2]), new DND5eSpecialActionButton(specialActions[3])), new ARGON.MAIN.BUTTONS.SplitButton(new DND5eSpecialActionButton(specialActions[4]), new DND5eSpecialActionButton(specialActions[5])), new DND5eButtonPanelButton({ type: \"consumable\", items: consumableItems, color: 0 })]);\r\n                } else {\r\n                    buttons.push(...[new DND5eItemButton({ item: null, isWeaponSet: true, isPrimary: true }), ...spellButton, new DND5eButtonPanelButton({ type: \"feat\", items: featItems, color: 0 }), new DND5eButtonPanelButton({ type: \"consumable\", items: consumableItems, color: 0 })]);\r\n                }\r\n\r\n                const barItems = this.actor.items.filter((item) => CoreHUD.DND5E.mainBarFeatures.includes(item.system.type?.value) && actionTypes.action.includes(getActivationType(item)));\r\n                buttons.push(...condenseItemButtons(barItems));\r\n\r\n                return buttons.filter((button) => button.hasContents || button.items == undefined || button.items.length);\r\n            }\r\n        }\r\n\r\n        class DND5eBonusActionPanel extends ARGON.MAIN.ActionPanel {\r\n            constructor(...args) {\r\n                super(...args);\r\n            }\r\n\r\n            get label() {\r\n                return \"DND5E.BonusAction\";\r\n            }\r\n\r\n            get maxActions() {\r\n                return this.actor?.inCombat ? 1 : null;\r\n            }\r\n\r\n            get currentActions() {\r\n                return getMidiFlag(\"bonus\") ?? (this.isActionUsed ? 0 : 1);\r\n            }\r\n\r\n            _onNewRound(combat) {\r\n                this.isActionUsed = false;\r\n                this.updateActionUse();\r\n            }\r\n\r\n            async _getButtons() {\r\n                const buttons = [new DND5eItemButton({ item: null, isWeaponSet: true, isPrimary: false })];\r\n                for (const [type, types] of Object.entries(itemTypes)) {\r\n                    const items = this.actor.items.filter((item) => types.includes(item.type) && actionTypes.bonus.includes(getActivationType(item)) && !CoreHUD.DND5E.mainBarFeatures.includes(item.system.type?.value));\r\n                    if (!items.length) continue;\r\n                    const button = new DND5eButtonPanelButton({ type, items, color: 1 });\r\n                    if (button.hasContents) buttons.push(button);\r\n                }\r\n\r\n                const barItems = this.actor.items.filter((item) => CoreHUD.DND5E.mainBarFeatures.includes(item.system.type?.value) && actionTypes.bonus.includes(getActivationType(item)));\r\n                buttons.push(...condenseItemButtons(barItems));\r\n\r\n                return buttons;\r\n            }\r\n        }\r\n\r\n        class DND5eReactionActionPanel extends ARGON.MAIN.ActionPanel {\r\n            constructor(...args) {\r\n                super(...args);\r\n            }\r\n\r\n            get label() {\r\n                return \"DND5E.Reaction\";\r\n            }\r\n\r\n            get maxActions() {\r\n                return this.actor?.inCombat ? 1 : null;\r\n            }\r\n\r\n            get currentActions() {\r\n                return getMidiFlag(\"reaction\") ?? (this.isActionUsed ? 0 : 1);\r\n            }\r\n\r\n            _onNewRound(combat) {\r\n                this.isActionUsed = false;\r\n                this.updateActionUse();\r\n            }\r\n\r\n            async _getButtons() {\r\n                const buttons = [new DND5eItemButton({ item: null, isWeaponSet: true, isPrimary: true })];\r\n                //buttons.push(new DND5eEquipmentButton({slot: 1}));\r\n                for (const [type, types] of Object.entries(itemTypes)) {\r\n                    const items = this.actor.items.filter((item) => types.includes(item.type) && actionTypes.reaction.includes(getActivationType(item)) && !CoreHUD.DND5E.mainBarFeatures.includes(item.system.type?.value));\r\n                    if (!items.length) continue;\r\n                    const button = new DND5eButtonPanelButton({ type, items, color: 3 });\r\n                    if (button.hasContents) buttons.push(button);\r\n                }\r\n\r\n                const barItems = this.actor.items.filter((item) => CoreHUD.DND5E.mainBarFeatures.includes(item.system.type?.value) && actionTypes.reaction.includes(getActivationType(item)));\r\n                buttons.push(...condenseItemButtons(barItems));\r\n\r\n                return buttons;\r\n            }\r\n        }\r\n\r\n        class DND5eFreeActionPanel extends ARGON.MAIN.ActionPanel {\r\n            constructor(...args) {\r\n                super(...args);\r\n            }\r\n\r\n            get label() {\r\n                return \"DND5E.Special\";\r\n            }\r\n\r\n            get maxActions() {\r\n                return this.actor?.inCombat ? 1 : null;\r\n            }\r\n\r\n            get currentActions() {\r\n                return this.isActionUsed ? 0 : 1;\r\n            }\r\n\r\n            _onNewRound(combat) {\r\n                this.isActionUsed = false;\r\n                this.updateActionUse();\r\n            }\r\n\r\n            async _getButtons() {\r\n                const buttons = [];\r\n\r\n                for (const [type, types] of Object.entries(itemTypes)) {\r\n                    const items = this.actor.items.filter((item) => types.includes(item.type) && actionTypes.free.includes(getActivationType(item)) && !CoreHUD.DND5E.mainBarFeatures.includes(item.system.type?.value));\r\n                    if (!items.length) continue;\r\n                    const button = new DND5eButtonPanelButton({ type, items, color: 2 });\r\n                    if (button.hasContents) buttons.push(button);\r\n                }\r\n\r\n                const barItems = this.actor.items.filter((item) => CoreHUD.DND5E.mainBarFeatures.includes(item.system.type?.value) && actionTypes.free.includes(getActivationType(item)));\r\n                buttons.push(...condenseItemButtons(barItems));\r\n\r\n                return buttons;\r\n            }\r\n        }\r\n\r\n        class DND5eLegActionPanel extends ARGON.MAIN.ActionPanel {\r\n            constructor(...args) {\r\n                super(...args);\r\n            }\r\n\r\n            get label() {\r\n                return \"DND5E.LegendaryActionLabel\";\r\n            }\r\n\r\n            get maxActions() {\r\n                return this.actor?.inCombat ? this.actor.system.resources?.legact?.max ?? null : null;\r\n            }\r\n\r\n            get currentActions() {\r\n                return this.actor.system.resources?.legact?.value ?? null;\r\n            }\r\n\r\n            async _getButtons() {\r\n                const buttons = [];\r\n                const legendary = this.actor.items.filter((item) => getActivationType(item) === \"legendary\");\r\n                legendary.forEach((item) => {\r\n                    buttons.push(new DND5eItemButton({ item, inActionPanel: true }));\r\n                });\r\n                return buttons;\r\n            }\r\n        }\r\n\r\n        class DND5eLairActionPanel extends ARGON.MAIN.ActionPanel {\r\n            constructor(...args) {\r\n                super(...args);\r\n            }\r\n\r\n            get label() {\r\n                return \"DND5E.LairActionLabel\";\r\n            }\r\n\r\n            get maxActions() {\r\n                return this.actor?.inCombat ? 1 : null;\r\n            }\r\n\r\n            get currentActions() {\r\n                return this.actor.system.resources.lair?.value * 1;\r\n            }\r\n\r\n            async _getButtons() {\r\n                const buttons = [];\r\n                const lair = this.actor.items.filter((item) => getActivationType(item) === \"lair\");\r\n                lair.forEach((item) => {\r\n                    buttons.push(new DND5eItemButton({ item, inActionPanel: true }));\r\n                });\r\n                return buttons;\r\n            }\r\n        }\r\n\r\n        class DND5eMythicActionPanel extends ARGON.MAIN.ActionPanel {\r\n            constructor(...args) {\r\n                super(...args);\r\n            }\r\n\r\n            get label() {\r\n                return \"DND5E.MythicActionLabel\";\r\n            }\r\n\r\n            get maxActions() {\r\n                return null; //this.actor?.inCombat ? 1 : null;\r\n            }\r\n\r\n            get currentActions() {\r\n                return null; //this.actor.system.resources.mythic?.value * 1;\r\n            }\r\n\r\n            async _getButtons() {\r\n                const buttons = [];\r\n                const mythic = this.actor.items.filter((item) => getActivationType(item) === \"mythic\");\r\n                mythic.forEach((item) => {\r\n                    buttons.push(new DND5eItemButton({ item, inActionPanel: true }));\r\n                });\r\n                return buttons;\r\n            }\r\n        }\r\n\r\n        class DND5eItemButton extends ARGON.MAIN.BUTTONS.ItemButton {\r\n            constructor(...args) {\r\n                super(...args);\r\n            }\r\n\r\n            get activity() {\r\n                if (!this.item?.system?.activities) {\r\n                    return;\r\n                }\r\n                return Array.from(this.item.system.activities)[0];\r\n            }\r\n\r\n            get hasTooltip() {\r\n                return true;\r\n            }\r\n\r\n            get ranges() {\r\n                const item = this.activity;\r\n                const touchRange = item.range.units == \"touch\" ? canvas?.scene?.grid?.distance : null;\r\n                return {\r\n                    normal: item?.range?.value ?? touchRange,\r\n                    long: item?.range?.long ?? null,\r\n                };\r\n            }\r\n\r\n            get targets() {\r\n                const item = this.activity;\r\n                const validTargets = [\"creature\", \"ally\", \"enemy\"];\r\n                const actionType = item.actionType;\r\n                const affects = item.target?.affects ?? {};\r\n                const targetType = affects.type;\r\n                if (!item.target?.template?.units && validTargets.includes(targetType)) {\r\n                    return affects.count ?? 1;\r\n                } else if (validTargets.includes(targetType) && affects.count) {\r\n                    return affects.count;\r\n                } else if (actionType === \"mwak\" || actionType === \"rwak\" || actionType === \"msak\" || actionType === \"rsak\") {\r\n                    return affects.count || 1;\r\n                }\r\n                return null;\r\n            }\r\n\r\n            get visible() {\r\n                if (!this._isWeaponSet) return super.visible;\r\n                const isReaction = this.parent instanceof DND5eReactionActionPanel;\r\n                const isMelee = this.activity?.actionType === \"mwak\";\r\n                if (isReaction && !isMelee) return false;\r\n                if (this._isPrimary) return super.visible;\r\n                if (this.activity?.type?.value === \"shield\") return false;\r\n                return super.visible;\r\n            }\r\n\r\n            async getTooltipData() {\r\n                const tooltipData = await getTooltipDetails(this.item);\r\n                tooltipData.propertiesLabel = \"enhancedcombathud-dnd5e.tooltip.properties.name\";\r\n                return tooltipData;\r\n            }\r\n\r\n            async _onLeftClick(event) {\r\n                ui.ARGON.interceptNextDialog(event.currentTarget);\r\n                const used = await this.item.use({event, legacy: false}, {event});\r\n                if (used) {\r\n                    DND5eItemButton.consumeActionEconomy(this.activity);\r\n                    const useOtherItem = this.activity?.consumption?.targets?.find(t => t.type === \"itemUses\");\r\n                    if (useOtherItem) {\r\n                        const otherItem = this.actor.items.get(useOtherItem.target);\r\n                        const allConnectedItems = this.actor.items.filter(i => i.system.activities?.find(a => a.consumption?.targets?.find(t => t.type === \"itemUses\" && t.target === otherItem.id)));\r\n                        ui.ARGON.updateItemButtons(allConnectedItems);\r\n                    }\r\n                    this.render(true)\r\n                }\r\n            }\r\n\r\n            async _onRightClick(event) {\r\n                this.activity?.sheet?.render(true);\r\n            }\r\n\r\n            static consumeActionEconomy(activity) {\r\n                const activationType = activity?.activation?.type;\r\n                let actionType = null;\r\n                for (const [type, types] of Object.entries(actionTypes)) {\r\n                    if (types.includes(activationType)) actionType = type;\r\n                }\r\n                if (!actionType) return;\r\n                if (game.combat?.combatant?.actor !== activity.item.parent) actionType = \"reaction\";\r\n                if (actionType === \"action\") {\r\n                    ui.ARGON.components.main[0].isActionUsed = true;\r\n                    ui.ARGON.components.main[0].updateActionUse();\r\n                } else if (actionType === \"bonus\") {\r\n                    ui.ARGON.components.main[1].isActionUsed = true;\r\n                    ui.ARGON.components.main[1].updateActionUse();\r\n                } else if (actionType === \"reaction\") {\r\n                    ui.ARGON.components.main[2].isActionUsed = true;\r\n                    ui.ARGON.components.main[2].updateActionUse();\r\n                } else if (actionType === \"free\") {\r\n                    ui.ARGON.components.main[3].isActionUsed = true;\r\n                    ui.ARGON.components.main[3].updateActionUse();\r\n                } else if (actionType === \"legendary\") {\r\n                    ui.ARGON.components.main[4].isActionUsed = true;\r\n                }\r\n            }\r\n\r\n            async render(...args) {\r\n                await super.render(...args);\r\n                if (this.activity) {\r\n                    const weapons = this.actor.items.filter((item) => item.consume?.target === this.activity.id);\r\n                    ui.ARGON.updateItemButtons(weapons);\r\n                }\r\n            }\r\n\r\n            get quantity() {\r\n                if (this.item.system.uses?.max) return this.item.system.uses.max - this.item.system.uses.spent;\r\n                if (!this.activity) return null;\r\n                const showQuantityItemTypes = [\"consumable\"];\r\n                const consumeType = this.activity?.consume?.type;\r\n                const useAmmo = this.item.system.ammunition?.type;\r\n                const useOtherItem = this.activity?.consumption?.targets?.find(t => t.type === \"itemUses\");\r\n                if (useOtherItem) {\r\n                    const otherItem = this.actor.items.get(useOtherItem.target);\r\n                    if (otherItem && otherItem.system.uses?.max) {\r\n                        return otherItem.system.uses.max - otherItem.system.uses.spent;\r\n                    }\r\n                }\r\n                if (useAmmo) {\r\n                    const ammoItem = this.item.system.ammunitionOptions[0]?.item;\r\n                    if (!ammoItem) return null;\r\n                    return Math.floor(ammoItem.system.quantity ?? 0);\r\n                } else if (consumeType === \"attribute\") {\r\n                    return Math.floor(getProperty(this.actor, this.activity.consume.target) / this.activity.consume.amount);\r\n                } else if (consumeType === \"charges\") {\r\n                    const chargesItem = this.actor.items.get(this.activity.consume.target);\r\n                    if (!chargesItem) return null;\r\n                    return Math.floor((chargesItem.uses?.value ?? 0) / this.activity.consume.amount);\r\n                } else if (showQuantityItemTypes.includes(this.item.type) && !this.activity.uses.max) {\r\n                    return this.item.system.quantity;\r\n                } else if (this.activity.uses.value !== null && this.activity.uses.per !== null && this.activity.uses.max) {\r\n                    return this.activity.uses.value;\r\n                }\r\n                return null;\r\n            }\r\n        }\r\n\r\n        class DND5eButtonPanelButton extends ARGON.MAIN.BUTTONS.ButtonPanelButton {\r\n            constructor({ type, items, color }) {\r\n                super();\r\n                this.type = type;\r\n                this.items = items;\r\n                this.color = color;\r\n                this.itemsWithSpells = [];\r\n                this._spells = this.prePrepareSpells();\r\n            }\r\n\r\n            get hasContents() {\r\n                return this._spells ? !!this._spells.length || !!this.itemsWithSpells.length : !!this.items.length;\r\n            }\r\n\r\n            get colorScheme() {\r\n                return this.color;\r\n            }\r\n\r\n            get id() {\r\n                return `${this.type}-${this.color}`;\r\n            }\r\n\r\n            get label() {\r\n                switch (this.type) {\r\n                    case \"spell\":\r\n                        return \"enhancedcombathud-dnd5e.hud.castspell.name\";\r\n                    case \"feat\":\r\n                        return \"enhancedcombathud-dnd5e.hud.usepower.name\";\r\n                    case \"consumable\":\r\n                        return \"enhancedcombathud-dnd5e.hud.useitem.name\";\r\n                }\r\n            }\r\n\r\n            get icon() {\r\n                switch (this.type) {\r\n                    case \"spell\":\r\n                        return \"modules/enhancedcombathud/icons/spell-book.webp\";\r\n                    case \"feat\":\r\n                        return \"modules/enhancedcombathud/icons/mighty-force.webp\";\r\n                    case \"consumable\":\r\n                        return \"modules/enhancedcombathud/icons/drink-me.webp\";\r\n                }\r\n            }\r\n\r\n            get showPreparedOnly() {\r\n                if (this.actor.type !== \"character\") return false;\r\n                const preparedFlag = this.actor.getFlag(MODULE_ID, \"showPrepared\");\r\n                if (preparedFlag === \"all\") return false;\r\n                if (preparedFlag === \"preparedOnly\") return true;\r\n                const classes = Object.keys(this.actor.classes);\r\n                const requiresPreparation = [\"cleric\", \"druid\", \"paladin\", \"wizard\", \"artificer\"].some((className) => classes.includes(className));\r\n                return requiresPreparation;\r\n            }\r\n\r\n            prePrepareSpells() {\r\n                if (this.type !== \"spell\") return;\r\n\r\n                const spellLevels = CONFIG.DND5E.spellLevels;\r\n                const itemsToIgnore = [];\r\n                if (game.modules.get(\"items-with-spells-5e\")?.active) {\r\n                    const IWSAPI = game.modules.get(\"items-with-spells-5e\").api;\r\n                    const actionType = this.items[0].system.activation?.type;\r\n                    const spellItems = this.actor.items.filter((item) => item.flags[\"items-with-spells-5e\"]?.[\"item-spells\"]?.length);\r\n                    for (const item of spellItems) {\r\n                        const spellData = item.flags[\"items-with-spells-5e\"][\"item-spells\"];\r\n                        const itemsInSpell = spellData.map((spell) => this.actor.items.get(spell.id)).filter((item) => item && getActivationType(item) === actionType);\r\n                        if (!itemsInSpell.length) continue;\r\n                        itemsToIgnore.push(...itemsInSpell);\r\n                        if (!IWSAPI.isUsableItem(item)) continue;\r\n                        this.itemsWithSpells.push({\r\n                            label: item.name,\r\n                            buttons: itemsInSpell.map((item) => new DND5eItemButton({ item })),\r\n                            uses: () => {\r\n                                return { max: item.system.uses?.max, value: item.system.uses?.value };\r\n                            },\r\n                        });\r\n                    }\r\n                    this.items = this.items.filter((item) => !itemsToIgnore.includes(item));\r\n                }\r\n                const magicItemsSpells = this.items.filter((item) => item.flags.dnd5e?.cachedFor?.includes(\"Activity\"));\r\n                const magicItems = magicItemsSpells.map((item) => ({ spell: item, item: this.actor.items.get(item.flags.dnd5e.cachedFor.split(\".Activity.\")[0].replace(\".Item.\", \"\")) }));\r\n                const magicItemsMap = new Map();\r\n                magicItems.forEach((item) => {\r\n                    const current = magicItemsMap.get(item.item);\r\n                    if (current) {\r\n                        current.push(item.spell);\r\n                    } else {\r\n                        magicItemsMap.set(item.item, [item.spell]);\r\n                    }\r\n                });\r\n                for (const [item, spells] of magicItemsMap) {\r\n                    const requiresAttunement = item.system.attunement === \"required\";\r\n                    const isAttuned = item.system.attuned;\r\n                    itemsToIgnore.push(...spells);\r\n\r\n                    if (requiresAttunement && !isAttuned) continue;\r\n\r\n                    this.itemsWithSpells.push({\r\n                        label: item.name,\r\n                        buttons: spells.map((spell) => new DND5eItemButton({ item: spell })),\r\n                        uses: () => {\r\n                            return { max: item.system.uses?.max, value: item.system.uses?.value };\r\n                        },\r\n                    });\r\n                }\r\n                if (magicItems.length) this.items = this.items.filter((item) => !itemsToIgnore.includes(item));\r\n                if (this.showPreparedOnly) {\r\n                    const allowIfNotPrepared = [\"atwill\", \"innate\", \"pact\", \"always\"];\r\n                    this.items = this.items.filter((item) => {\r\n                        if (allowIfNotPrepared.includes(item.system.preparation.mode)) return true;\r\n                        if (item.system.level == 0) return true;\r\n                        return item.system.preparation.prepared;\r\n                    });\r\n                }\r\n\r\n                const spells = [\r\n                    ...this.itemsWithSpells,\r\n                    {\r\n                        label: \"DND5E.SpellPrepAtWill\",\r\n                        buttons: this.items.filter((item) => item.system.preparation.mode === \"atwill\").map((item) => new DND5eItemButton({ item })),\r\n                        uses: { max: Infinity, value: Infinity },\r\n                    },\r\n                    {\r\n                        label: \"DND5E.SpellPrepInnate\",\r\n                        buttons: this.items.filter((item) => item.system.preparation.mode === \"innate\").map((item) => new DND5eItemButton({ item })),\r\n                        uses: { max: Infinity, value: Infinity },\r\n                    },\r\n                    {\r\n                        label: Object.values(spellLevels)[0],\r\n                        buttons: this.items.filter((item) => item.system.level == 0).map((item) => new DND5eItemButton({ item })),\r\n                        uses: { max: Infinity, value: Infinity },\r\n                    },\r\n                    {\r\n                        label: \"DND5E.PactMagic\",\r\n                        buttons: this.items.filter((item) => item.system.preparation.mode === \"pact\").map((item) => new DND5eItemButton({ item })),\r\n                        uses: () => {\r\n                            return this.actor.system.spells.pact;\r\n                        },\r\n                    },\r\n                ];\r\n                for (const [level, label] of Object.entries(spellLevels)) {\r\n                    const levelSpells = this.items.filter((item) => item.system.level == level && (item.system.preparation.mode === \"prepared\" || item.system.preparation.mode === \"always\"));\r\n                    if (!levelSpells.length || level == 0) continue;\r\n                    spells.push({\r\n                        label,\r\n                        buttons: levelSpells.map((item) => new DND5eItemButton({ item })),\r\n                        uses: () => {\r\n                            return this.actor.system.spells[`spell${level}`];\r\n                        },\r\n                    });\r\n                }\r\n                return spells.filter((spell) => spell.buttons.length);\r\n            }\r\n\r\n            async _getPanel() {\r\n                if (this.type === \"spell\") {\r\n                    return new ARGON.MAIN.BUTTON_PANELS.ACCORDION.AccordionPanel({ id: this.id, accordionPanelCategories: this._spells.map(({ label, buttons, uses }) => new ARGON.MAIN.BUTTON_PANELS.ACCORDION.AccordionPanelCategory({ label, buttons, uses })) });\r\n                } else {\r\n                    return new ARGON.MAIN.BUTTON_PANELS.ButtonPanel({ id: this.id, buttons: this.items.map((item) => new DND5eItemButton({ item })) });\r\n                }\r\n            }\r\n        }\r\n\r\n        class DND5eSpecialActionButton extends ARGON.MAIN.BUTTONS.ActionButton {\r\n            constructor(specialItem) {\r\n                super();\r\n                const actorItem = this.actor.items.getName(specialItem.name);\r\n                this.actorItem = actorItem;\r\n                this.item =\r\n                    actorItem ??\r\n                    new CONFIG.Item.documentClass(specialItem, {\r\n                        parent: this.actor,\r\n                    });\r\n            }\r\n\r\n            get label() {\r\n                return this.item.name;\r\n            }\r\n\r\n            get icon() {\r\n                return this.item.img;\r\n            }\r\n\r\n            get hasTooltip() {\r\n                return true;\r\n            }\r\n\r\n            get activity() {\r\n                if (!this.item?.system?.activities) {\r\n                    return;\r\n                }\r\n                return Array.from(this.item.system.activities)[0];\r\n            }\r\n\r\n            async getTooltipData() {\r\n                const tooltipData = await getTooltipDetails(this.item);\r\n                tooltipData.propertiesLabel = \"enhancedcombathud-dnd5e.tooltip.properties.name\";\r\n                return tooltipData;\r\n            }\r\n\r\n            async _onLeftClick(event) {\r\n                const useCE = game.modules.get(\"dfreds-convenient-effects\")?.active && game.dfreds.effectInterface.findEffect({ effectName: this.label });\r\n                let success = false;\r\n                if (useCE) {\r\n                    success = true;\r\n                    await game.dfreds.effectInterface.toggleEffect({ effectName: this.label, overlay: false, uuids: [this.actor.uuid] });\r\n                } else {\r\n                    success = this.actorItem ? await this.activity.use({ event }, { event }) : await this.createChatMessage();\r\n                }\r\n                if (success) {\r\n                    DND5eItemButton.consumeActionEconomy(this.item);\r\n                }\r\n            }\r\n\r\n            async createChatMessage() {\r\n                return await ChatMessage.create({\r\n                    user: game.user,\r\n                    speaker: {\r\n                        actor: this.actor,\r\n                        token: this.actor.token,\r\n                        alias: this.actor.name,\r\n                    },\r\n                    content: `\r\n                    <div class=\"dnd5e2 chat-card item-card\" data-display-challenge=\"\">\r\n\r\n    <section class=\"card-header description collapsible\">\r\n\r\n        <header class=\"summary\">\r\n            <img class=\"gold-icon\" src=\"${this.icon}\">\r\n            <div class=\"name-stacked border\">\r\n                <span class=\"title\">${this.label}</span>\r\n                <span class=\"subtitle\">\r\n                    Feature\r\n                </span>\r\n            </div>\r\n            <i class=\"fas fa-chevron-down fa-fw\"></i>\r\n        </header>\r\n\r\n        <section class=\"details collapsible-content card-content\">\r\n            <div class=\"wrapper\">\r\n                ${this.item.system.description.value}\r\n            </div>\r\n        </section>\r\n    </section>\r\n\r\n\r\n</div>\r\n                    `,\r\n                });\r\n            }\r\n        }\r\n\r\n        class DND5eMovementHud extends ARGON.MovementHud {\r\n            constructor(...args) {\r\n                super(...args);\r\n                this.getMovementMode = game.modules.get(\"elevation-drag-ruler\")?.api?.getMovementMode;\r\n            }\r\n\r\n            get visible() {\r\n                return game.combat?.started;\r\n            }\r\n\r\n            get movementMode() {\r\n                return this.getMovementMode ? this.getMovementMode(this.token) : \"walk\";\r\n            }\r\n\r\n            get movementMax() {\r\n                if (!this.actor) return 0;\r\n                return this.actor.system.attributes.movement[this.movementMode] / canvas.scene.dimensions.distance;\r\n            }\r\n        }\r\n\r\n        class DND5eButtonHud extends ARGON.ButtonHud {\r\n            constructor(...args) {\r\n                super(...args);\r\n            }\r\n\r\n            get visible() {\r\n                return !game.combat?.started;\r\n            }\r\n\r\n            async _getButtons() {\r\n                return [\r\n                    {\r\n                        label: \"DND5E.REST.Long.Label\",\r\n                        onClick: (event) => this.actor.longRest(),\r\n                        icon: \"fas fa-bed\",\r\n                    },\r\n                    {\r\n                        label: \"DND5E.REST.Short.Label\",\r\n                        onClick: (event) => this.actor.shortRest(),\r\n                        icon: \"fas fa-coffee\",\r\n                    },\r\n                ];\r\n            }\r\n        }\r\n\r\n        class DND5eWeaponSets extends ARGON.WeaponSets {\r\n            async getDefaultSets() {\r\n                const sets = await super.getDefaultSets();\r\n                const isTransformed = this.actor.flags?.dnd5e?.isPolymorphed;\r\n                if (this.actor.type !== \"npc\" && !isTransformed) return sets;\r\n                const actions = this.actor.items.filter((item) => item.type === \"weapon\" && getActivationType(item) === \"action\");\r\n                const bonus = this.actor.items.filter((item) => item.type === \"weapon\" && getActivationType(item) === \"bonus\");\r\n                return {\r\n                    1: {\r\n                        primary: actions[0]?.uuid ?? null,\r\n                        secondary: bonus[0]?.uuid ?? null,\r\n                    },\r\n                    2: {\r\n                        primary: actions[1]?.uuid ?? null,\r\n                        secondary: bonus[1]?.uuid ?? null,\r\n                    },\r\n                    3: {\r\n                        primary: actions[2]?.uuid ?? null,\r\n                        secondary: bonus[2]?.uuid ?? null,\r\n                    },\r\n                };\r\n            }\r\n\r\n            async _getSets() {\r\n                const isTransformed = this.actor.flags?.dnd5e?.isPolymorphed;\r\n\r\n                const sets = isTransformed ? await this.getDefaultSets() : foundry.utils.mergeObject(await this.getDefaultSets(), foundry.utils.deepClone(this.actor.getFlag(\"enhancedcombathud\", \"weaponSets\") || {}));\r\n\r\n                for (const [set, slots] of Object.entries(sets)) {\r\n                    slots.primary = slots.primary ? await fromUuid(slots.primary) : null;\r\n                    slots.secondary = slots.secondary ? await fromUuid(slots.secondary) : null;\r\n                }\r\n                return sets;\r\n            }\r\n\r\n            async _onSetChange({ sets, active }) {\r\n                const switchEquip = game.settings.get(\"enhancedcombathud-dnd5e\", \"switchEquip\");\r\n                if (!switchEquip) return;\r\n                const updates = [];\r\n                const activeSet = sets[active];\r\n                const activeItems = Object.values(activeSet).filter((item) => item);\r\n                const inactiveSets = Object.values(sets).filter((set) => set !== activeSet);\r\n                const inactiveItems = inactiveSets\r\n                    .flatMap((set) => Object.values(set))\r\n                    .filter((item) => item)\r\n                    .filter((item) => !activeItems.includes(item));\r\n                activeItems.forEach((item) => {\r\n                    if (!item.system?.equipped) updates.push({ _id: item.id, \"system.equipped\": true });\r\n                });\r\n                inactiveItems.forEach((item) => {\r\n                    if (item.system?.equipped) updates.push({ _id: item.id, \"system.equipped\": false });\r\n                });\r\n                return await this.actor.updateEmbeddedDocuments(\"Item\", updates);\r\n            }\r\n        }\r\n\r\n        const enableMacroPanel = game.settings.get(MODULE_ID, \"macroPanel\");\r\n\r\n        const mainPanels = [DND5eActionActionPanel, DND5eBonusActionPanel, DND5eReactionActionPanel, DND5eFreeActionPanel, DND5eLegActionPanel, DND5eLairActionPanel, DND5eMythicActionPanel];\r\n        if (enableMacroPanel) mainPanels.push(ARGON.PREFAB.MacroPanel);\r\n        mainPanels.push(ARGON.PREFAB.PassTurnPanel);\r\n\r\n        CoreHUD.definePortraitPanel(DND5ePortraitPanel);\r\n        CoreHUD.defineDrawerPanel(DND5eDrawerPanel);\r\n        CoreHUD.defineMainPanels(mainPanels);\r\n        CoreHUD.defineMovementHud(DND5eMovementHud);\r\n        CoreHUD.defineButtonHud(DND5eButtonHud);\r\n        CoreHUD.defineWeaponSets(DND5eWeaponSets);\r\n        CoreHUD.defineTooltip(DND5eTooltip);\r\n        CoreHUD.defineSupportedActorTypes([\"character\", \"npc\"]);\r\n    });\r\n}\r\n\r\nfunction registerItems() {\r\n    ECHItems[game.i18n.localize(\"enhancedcombathud-dnd5e.items.disengage.name\")] = {\r\n        name: game.i18n.localize(\"enhancedcombathud-dnd5e.items.disengage.name\"),\r\n        type: \"feat\",\r\n        img: \"modules/enhancedcombathud/icons/journey.webp\",\r\n        system: {\r\n            type: {\r\n                value: \"\",\r\n                subtype: \"\",\r\n            },\r\n            description: {\r\n                value: game.i18n.localize(\"enhancedcombathud-dnd5e.items.disengage.desc\"),\r\n                chat: \"\",\r\n                unidentified: \"\",\r\n            },\r\n            source: \"\",\r\n            quantity: 1,\r\n            weight: 0,\r\n            price: 0,\r\n            attuned: false,\r\n            attunement: 0,\r\n            equipped: false,\r\n            rarity: \"\",\r\n            identified: true,\r\n            activation: {\r\n                type: \"action\",\r\n                cost: 1,\r\n                condition: \"\",\r\n            },\r\n            duration: {\r\n                value: 1,\r\n                units: \"turn\",\r\n            },\r\n            target: {\r\n                value: null,\r\n                width: null,\r\n                units: \"\",\r\n                type: \"self\",\r\n            },\r\n            range: {\r\n                value: null,\r\n                long: null,\r\n                units: \"\",\r\n            },\r\n            consume: {\r\n                type: \"\",\r\n                target: \"\",\r\n                amount: null,\r\n            },\r\n            ability: \"\",\r\n            actionType: \"util\",\r\n            attackBonus: 0,\r\n            chatFlavor: \"\",\r\n            critical: null,\r\n            damage: {\r\n                parts: [],\r\n                versatile: \"\",\r\n            },\r\n            formula: \"\",\r\n            save: {\r\n                ability: \"\",\r\n                dc: null,\r\n                scaling: \"spell\",\r\n            },\r\n        },\r\n        sort: 0,\r\n        flags: {\r\n            core: {\r\n                sourceId: \"Item.wyQkeuZkttllAFB1\",\r\n            },\r\n\r\n            \"midi-qol\": {\r\n                onUseMacroName: \"\",\r\n            },\r\n        },\r\n    };\r\n    ECHItems[game.i18n.localize(\"enhancedcombathud-dnd5e.items.dodge.name\")] = {\r\n        name: game.i18n.localize(\"enhancedcombathud-dnd5e.items.dodge.name\"),\r\n        type: \"feat\",\r\n        img: \"modules/enhancedcombathud/icons/armor-upgrade.webp\",\r\n        system: {\r\n            type: {\r\n                value: \"\",\r\n                subtype: \"\",\r\n            },\r\n            description: {\r\n                value: game.i18n.localize(\"enhancedcombathud-dnd5e.items.dodge.desc\"),\r\n                chat: \"\",\r\n                unidentified: \"\",\r\n            },\r\n            source: \"\",\r\n            quantity: 1,\r\n            weight: 0,\r\n            price: 0,\r\n            attuned: false,\r\n            attunement: 0,\r\n            equipped: false,\r\n            rarity: \"\",\r\n            identified: true,\r\n            activation: {\r\n                type: \"action\",\r\n                cost: 1,\r\n                condition: \"\",\r\n            },\r\n            duration: {\r\n                value: 1,\r\n                units: \"round\",\r\n            },\r\n            target: {\r\n                value: null,\r\n                width: null,\r\n                units: \"\",\r\n                type: \"self\",\r\n            },\r\n            range: {\r\n                value: null,\r\n                long: null,\r\n                units: \"\",\r\n            },\r\n\r\n            consume: {\r\n                type: \"\",\r\n                target: \"\",\r\n                amount: null,\r\n            },\r\n            ability: \"\",\r\n            actionType: \"util\",\r\n            attackBonus: 0,\r\n            chatFlavor: \"\",\r\n            critical: null,\r\n            damage: {\r\n                parts: [],\r\n                versatile: \"\",\r\n            },\r\n            formula: \"\",\r\n            save: {\r\n                ability: \"\",\r\n                dc: null,\r\n                scaling: \"spell\",\r\n            },\r\n            consumableType: \"trinket\",\r\n        },\r\n        sort: 0,\r\n        flags: {\r\n            \"midi-qol\": {\r\n                onUseMacroName: \"\",\r\n            },\r\n        },\r\n    };\r\n    ECHItems[game.i18n.localize(\"enhancedcombathud-dnd5e.items.ready.name\")] = {\r\n        name: game.i18n.localize(\"enhancedcombathud-dnd5e.items.ready.name\"),\r\n        type: \"feat\",\r\n        img: \"modules/enhancedcombathud/icons/clockwork.webp\",\r\n        system: {\r\n            type: {\r\n                value: \"\",\r\n                subtype: \"\",\r\n            },\r\n            description: {\r\n                value: game.i18n.localize(\"enhancedcombathud-dnd5e.items.ready.desc\"),\r\n                chat: \"\",\r\n                unidentified: \"\",\r\n            },\r\n            source: \"\",\r\n            quantity: 1,\r\n            weight: 0,\r\n            price: 0,\r\n            attuned: false,\r\n            attunement: 0,\r\n            equipped: false,\r\n            rarity: \"\",\r\n            identified: true,\r\n            activation: {\r\n                type: \"action\",\r\n                cost: 1,\r\n                condition: \"\",\r\n            },\r\n            duration: {\r\n                value: null,\r\n                units: \"\",\r\n            },\r\n            target: {\r\n                value: null,\r\n                width: null,\r\n                units: \"\",\r\n                type: \"self\",\r\n            },\r\n            range: {\r\n                value: null,\r\n                long: null,\r\n                units: \"\",\r\n            },\r\n\r\n            consume: {\r\n                type: \"\",\r\n                target: \"\",\r\n                amount: null,\r\n            },\r\n            ability: \"\",\r\n            actionType: \"util\",\r\n            attackBonus: 0,\r\n            chatFlavor: \"\",\r\n            critical: null,\r\n            damage: {\r\n                parts: [],\r\n                versatile: \"\",\r\n            },\r\n            formula: \"\",\r\n            save: {\r\n                ability: \"\",\r\n                dc: null,\r\n                scaling: \"spell\",\r\n            },\r\n            consumableType: \"trinket\",\r\n        },\r\n        sort: 0,\r\n        flags: {\r\n            \"midi-qol\": {\r\n                onUseMacroName: \"\",\r\n            },\r\n        },\r\n    };\r\n    ECHItems[game.i18n.localize(\"enhancedcombathud-dnd5e.items.hide.name\")] = {\r\n        name: game.i18n.localize(\"enhancedcombathud-dnd5e.items.hide.name\"),\r\n        type: \"feat\",\r\n        img: \"modules/enhancedcombathud/icons/cloak-dagger.webp\",\r\n        system: {\r\n            type: {\r\n                value: \"\",\r\n                subtype: \"\",\r\n            },\r\n            description: {\r\n                value: game.i18n.localize(\"enhancedcombathud-dnd5e.items.hide.desc\"),\r\n                chat: \"\",\r\n                unidentified: \"\",\r\n            },\r\n            source: \"\",\r\n            quantity: 1,\r\n            weight: 0,\r\n            price: 0,\r\n            attuned: false,\r\n            attunement: 0,\r\n            equipped: false,\r\n            rarity: \"\",\r\n            identified: true,\r\n            activation: {\r\n                type: \"action\",\r\n                cost: 1,\r\n                condition: \"\",\r\n            },\r\n            duration: {\r\n                value: null,\r\n                units: \"\",\r\n            },\r\n            target: {\r\n                value: null,\r\n                width: null,\r\n                units: \"\",\r\n                type: \"self\",\r\n            },\r\n            range: {\r\n                value: null,\r\n                long: null,\r\n                units: \"\",\r\n            },\r\n\r\n            consume: {\r\n                type: \"\",\r\n                target: \"\",\r\n                amount: null,\r\n            },\r\n            recharge: {\r\n                value: null,\r\n                charged: false,\r\n            },\r\n            ability: \"\",\r\n            actionType: \"util\",\r\n            attackBonus: 0,\r\n            chatFlavor: \"\",\r\n            critical: null,\r\n            damage: {\r\n                parts: [],\r\n                versatile: \"\",\r\n            },\r\n            formula: \"\",\r\n            save: {\r\n                ability: \"\",\r\n                dc: null,\r\n                scaling: \"spell\",\r\n            },\r\n            consumableType: \"trinket\",\r\n        },\r\n        sort: 0,\r\n        flags: {\r\n            \"midi-qol\": {\r\n                onUseMacroName: \"\",\r\n            },\r\n        },\r\n    };\r\n    ECHItems[game.i18n.localize(\"enhancedcombathud-dnd5e.items.dash.name\")] = {\r\n        name: game.i18n.localize(\"enhancedcombathud-dnd5e.items.dash.name\"),\r\n        type: \"feat\",\r\n        img: \"modules/enhancedcombathud/icons/walking-boot.webp\",\r\n        system: {\r\n            type: {\r\n                value: \"\",\r\n                subtype: \"\",\r\n            },\r\n            description: {\r\n                value: game.i18n.localize(\"enhancedcombathud-dnd5e.items.dash.desc\"),\r\n                chat: \"\",\r\n                unidentified: \"\",\r\n            },\r\n            source: \"\",\r\n            quantity: 1,\r\n            weight: 0,\r\n            price: 0,\r\n            attuned: false,\r\n            attunement: 0,\r\n            equipped: false,\r\n            rarity: \"\",\r\n            identified: true,\r\n            activation: {\r\n                type: \"action\",\r\n                cost: 1,\r\n                condition: \"\",\r\n            },\r\n            duration: {\r\n                value: null,\r\n                units: \"\",\r\n            },\r\n            target: {\r\n                value: null,\r\n                width: null,\r\n                units: \"\",\r\n                type: \"self\",\r\n            },\r\n            range: {\r\n                value: null,\r\n                long: null,\r\n                units: \"\",\r\n            },\r\n\r\n            consume: {\r\n                type: \"\",\r\n                target: \"\",\r\n                amount: null,\r\n            },\r\n            ability: \"\",\r\n            actionType: \"util\",\r\n            attackBonus: 0,\r\n            chatFlavor: \"\",\r\n            critical: null,\r\n            damage: {\r\n                parts: [],\r\n                versatile: \"\",\r\n            },\r\n            formula: \"\",\r\n            save: {\r\n                ability: \"\",\r\n                dc: null,\r\n                scaling: \"spell\",\r\n            },\r\n            consumableType: \"trinket\",\r\n        },\r\n        sort: 0,\r\n        flags: {\r\n            \"midi-qol\": {\r\n                onUseMacroName: \"\",\r\n            },\r\n        },\r\n    };\r\n    ECHItems[game.i18n.localize(\"enhancedcombathud-dnd5e.items.shove.name\")] = {\r\n        name: game.i18n.localize(\"enhancedcombathud-dnd5e.items.shove.name\"),\r\n        type: \"feat\",\r\n        img: \"modules/enhancedcombathud/icons/shield-bash.webp\",\r\n        system: {\r\n            type: {\r\n                value: \"\",\r\n                subtype: \"\",\r\n            },\r\n            description: {\r\n                value: game.i18n.localize(\"enhancedcombathud-dnd5e.items.shove.desc\"),\r\n                chat: \"\",\r\n                unidentified: \"\",\r\n            },\r\n            source: \"\",\r\n            quantity: 1,\r\n            weight: 0,\r\n            price: 0,\r\n            attuned: false,\r\n            attunement: 0,\r\n            equipped: false,\r\n            rarity: \"\",\r\n            identified: true,\r\n            activation: {\r\n                type: \"action\",\r\n                cost: 1,\r\n                condition: \"\",\r\n            },\r\n            duration: {\r\n                value: null,\r\n                units: \"\",\r\n            },\r\n            target: {\r\n                value: 1,\r\n                width: null,\r\n                units: \"\",\r\n                type: \"creature\",\r\n            },\r\n            range: {\r\n                value: null,\r\n                long: null,\r\n                units: \"touch\",\r\n            },\r\n\r\n            consume: {\r\n                type: \"\",\r\n                target: \"\",\r\n                amount: null,\r\n            },\r\n            ability: \"\",\r\n            actionType: \"util\",\r\n            attackBonus: 0,\r\n            chatFlavor: \"\",\r\n            critical: null,\r\n            damage: {\r\n                parts: [],\r\n                versatile: \"\",\r\n            },\r\n            formula: \"\",\r\n            save: {\r\n                ability: \"\",\r\n                dc: null,\r\n                scaling: \"spell\",\r\n            },\r\n            consumableType: \"trinket\",\r\n        },\r\n        sort: 0,\r\n        flags: {\r\n            \"midi-qol\": {\r\n                onUseMacroName: \"\",\r\n            },\r\n        },\r\n    };\r\n}\r\n","import { MODULE_ID } from \"./main.js\";\r\n\r\nexport function registerSettings() {\r\n    const settings = {\r\n        showWeaponsItems: {\r\n            name: game.i18n.localize(\"enhancedcombathud-dnd5e.settings.showWeaponsItems.name\"),\r\n            hint: game.i18n.localize(\"enhancedcombathud-dnd5e.settings.showWeaponsItems.hint\"),\r\n            scope: \"world\",\r\n            config: true,\r\n            type: Boolean,\r\n            default: false,\r\n            onChange: (sett) => {\r\n                ui.ARGON.constructor.DND5E.itemTypes.consumable = ui.ARGON.constructor.DND5E.itemTypes.consumable.filter(i => i !== \"weapon\");\r\n                if(sett) ui.ARGON.constructor.DND5E.itemTypes.consumable.push(\"weapon\");\r\n                ui.ARGON.refresh()\r\n            },\r\n        },\r\n        showClassActions: {\r\n            name: game.i18n.localize(\"enhancedcombathud-dnd5e.settings.showClassActions.name\"),\r\n            hint: game.i18n.localize(\"enhancedcombathud-dnd5e.settings.showClassActions.hint\"),\r\n            scope: \"world\",\r\n            config: true,\r\n            type: Boolean,\r\n            default: true,\r\n            onChange: (sett) => {\r\n                ui.ARGON.constructor.DND5E.mainBarFeatures = ui.ARGON.constructor.DND5E.mainBarFeatures.filter(i => i !== \"class\");\r\n                if(sett) ui.ARGON.constructor.DND5E.mainBarFeatures.push(\"class\");\r\n                ui.ARGON.refresh()\r\n            },\r\n        },\r\n        condenseClassActions: {\r\n            name: game.i18n.localize(\"enhancedcombathud-dnd5e.settings.condenseClassActions.name\"),\r\n            hint: game.i18n.localize(\"enhancedcombathud-dnd5e.settings.condenseClassActions.hint\"),\r\n            scope: \"world\",\r\n            config: true,\r\n            type: Boolean,\r\n            default: true,\r\n            onChange: () => ui.ARGON.refresh(),\r\n        },\r\n        macroPanel: {\r\n            name: game.i18n.localize(\"enhancedcombathud-dnd5e.settings.macroPanel.name\"),\r\n            hint: game.i18n.localize(\"enhancedcombathud-dnd5e.settings.macroPanel.hint\"),\r\n            scope: \"world\",\r\n            config: true,\r\n            type: Boolean,\r\n            default: false,\r\n            requiresReload: true,\r\n            onChange: () => ui.ARGON.refresh(),\r\n        },\r\n        switchEquip: {\r\n            name: game.i18n.localize(\"enhancedcombathud-dnd5e.settings.switchEquip.name\"),\r\n            hint: game.i18n.localize(\"enhancedcombathud-dnd5e.settings.switchEquip.hint\"),\r\n            scope: \"world\",\r\n            config: true,\r\n            type: Boolean,\r\n            default: true,\r\n            onChange: () => ui.ARGON.refresh(),\r\n        },\r\n        showSpecialActions: {\r\n            name: game.i18n.localize(\"enhancedcombathud-dnd5e.settings.showSpecialActions.name\"),\r\n            hint: game.i18n.localize(\"enhancedcombathud-dnd5e.settings.showSpecialActions.hint\"),\r\n            scope: \"world\",\r\n            config: true,\r\n            type: Boolean,\r\n            default: true,\r\n            onChange: () => ui.ARGON.refresh(),\r\n        },\r\n    };\r\n\r\n    registerSettingsArray(settings);\r\n}\r\n\r\nexport function getSetting(key) {\r\n    return game.settings.get(MODULE_ID, key);\r\n}\r\n\r\nexport async function setSetting(key, value) {\r\n    return await game.settings.set(MODULE_ID, key, value);\r\n}\r\n\r\nfunction registerSettingsArray(settings) {\r\n    for(const [key, value] of Object.entries(settings)) {\r\n        game.settings.register(MODULE_ID, key, value);\r\n    }\r\n}","import {initConfig} from \"./config.js\";\r\nimport { registerSettings } from \"./settings.js\";\r\n\r\nexport const MODULE_ID = \"enhancedcombathud-dnd5e\";\r\n\r\nHooks.on(\"setup\", () => {\r\n    registerSettings();\r\n    initConfig();\r\n});"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","_regeneratorRuntime","Op","hasOwn","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","_typeof","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","_catch","thrown","delegateYield","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","args","arguments","apply","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","_toPrimitive","input","hint","prim","toPrimitive","res","String","Number","_createClass","protoProps","staticProps","_get","Reflect","bind","property","receiver","base","_superPropBase","_getPrototypeOf","getOwnPropertyDescriptor","_inherits","subClass","superClass","_setPrototypeOf","p","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","construct","sham","Proxy","Boolean","valueOf","e","_createSuperInternal","Super","NewTarget","_possibleConstructorReturn","_assertThisInitialized","ReferenceError","ECHItems","initConfig","Hooks","on","item","parent","ui","ARGON","_actor","rendered","components","portrait","refresh","CoreHUD","_game$modules$get","game","system","id","registerItems","i18n","localize","img","subtype","description","chat","unidentified","source","quantity","weight","price","attuned","attunement","equipped","rarity","identified","activation","cost","condition","duration","units","width","range","long","consume","amount","ability","actionType","attackBonus","chatFlavor","critical","damage","parts","versatile","formula","save","dc","scaling","sort","flags","core","sourceId","onUseMacroName","consumableType","recharge","charged","DND5eTooltip","_ARGON$CORE$Tooltip","_super","concat","CORE","Tooltip","isMIDI","modules","active","getMidiFlag","_ui$ARGON$_actor$getF","_flag$actionType","getFlag","getActivationType","_item$system","_Array$from$","activities","Array","from","getActionType","_item$system2","_Array$from$2","actionTypes","action","bonus","reaction","free","itemTypes","spell","feat","consumable","mainBarFeatures","settings","MODULE_ID","DND5E","callAll","DND5ePortraitPanel","_ARGON$PORTRAIT$Portr","_getStatBlocks","_onDeathSave2","_super2","_len","_key","_this$actor","this","actor","isPC","_CONFIG$DND5E$creatur","_CONFIG$DND5E$creatur2","creatureType","CONFIG","creatureTypes","details","label","custom","cr","classes","map","c","join","level","race","isDying","attributes","hp","_this$actor$system$at","_this$actor$system$at2","death","success","_this$actor$system$at3","_this$actor$system$at4","failure","_callee","event","_callee$","_context","rollDeathSave","_onDeathSave","_x3","_callee2","_this$actor$system$at5","_this$actor$system$at6","HPText","ACText","SpellDC","hpColor","tempMax","hpMaxColor","_callee2$","_context2","split","word","toUpperCase","replace","trim","temp","tempmax","text","color","max","ac","getStatBlocks","PORTRAIT","PortraitPanel","DND5eDrawerButton","_ARGON$DRAWER$DrawerB","_getTooltipData","_super3","buttons","_this","TooltipManager","TOOLTIP_DIRECTIONS","RIGHT","_callee3","tooltipData","_callee3$","_context3","getTooltipDetails","getTooltipData","DRAWER","DrawerButton","DND5eDrawerPanel","_ARGON$DRAWER$DrawerP","_super4","_len2","_key2","_this2","abilities","skills","tools","tool","addSign","gridCols","captions","align","abilityData","onClick","rollAbilityCheck","mod","checkBonus","rollSavingThrow","skill","skillData","getProficiencyIcon","proficient","rollSkill","total","passive","style","rollToolCheck","abilityMod","proficiencyMultiplier","prof","DrawerPanel","DND5eActionActionPanel","_ARGON$MAIN$ActionPan","_getButtons2","_super5","_len3","_key3","_this$actor2","inCombat","_getMidiFlag","isActionUsed","_onNewRound","combat","updateActionUse","_callee4","spellItems","featItems","consumableItems","spellButton","specialActions","showSpecialActions","barItems","_callee4$","_context4","items","filter","_item$system$type","includes","_item$system$type2","_item$system$type3","DND5eButtonPanelButton","button","hasContents","DND5eItemButton","isWeaponSet","isPrimary","MAIN","BUTTONS","SplitButton","DND5eSpecialActionButton","_toConsumableArray","_item$system$type4","condenseItemButtons","_getButtons","ActionPanel","DND5eBonusActionPanel","_ARGON$MAIN$ActionPan2","_getButtons3","_super6","_len4","_key4","_this$actor3","_getMidiFlag2","_callee5","_loop","_i","_Object$entries","_this3","_callee5$","_context6","_Object$entries$_i","types","_loop$","_context5","_slicedToArray","_item$system$type5","entries","t0","_item$system$type6","DND5eReactionActionPanel","_ARGON$MAIN$ActionPan3","_getButtons4","_super7","_len5","_key5","_this$actor4","_getMidiFlag3","_callee6","_loop2","_i2","_Object$entries2","_this4","_callee6$","_context8","_Object$entries2$_i","_loop2$","_context7","_item$system$type7","_item$system$type8","DND5eFreeActionPanel","_ARGON$MAIN$ActionPan4","_getButtons5","_super8","_len6","_key6","_this$actor5","_callee7","_loop3","_i3","_Object$entries3","_this5","_callee7$","_context10","_Object$entries3$_i","_loop3$","_context9","_item$system$type9","_item$system$type10","DND5eLegActionPanel","_ARGON$MAIN$ActionPan5","_getButtons6","_super9","_len7","_key7","_this$actor6","_this$actor$system$re","_this$actor$system$re2","resources","legact","_this$actor$system$re3","_this$actor$system$re4","_callee8","_callee8$","_context11","inActionPanel","DND5eLairActionPanel","_ARGON$MAIN$ActionPan6","_getButtons7","_super10","_len8","_key8","_this$actor7","_this$actor$system$re5","lair","_callee9","_callee9$","_context12","DND5eMythicActionPanel","_ARGON$MAIN$ActionPan7","_getButtons8","_super11","_len9","_key9","_callee10","_callee10$","_context13","_ARGON$MAIN$BUTTONS$I","_render","_onRightClick2","_onLeftClick2","_getTooltipData2","_super12","_len10","_key10","_this$item","_canvas","_item$range$value","_item$range","_item$range$long","_item$range2","activity","touchRange","canvas","scene","grid","distance","normal","_item$target$affects","_item$target","_item$target2","_affects$count","validTargets","affects","targetType","template","count","_this$activity","_this$activity2","_isWeaponSet","isReaction","isMelee","_isPrimary","_callee11","_callee11$","_context14","propertiesLabel","_callee12","_this$activity3","useOtherItem","otherItem","allConnectedItems","_callee12$","_context15","interceptNextDialog","currentTarget","use","legacy","consumeActionEconomy","consumption","targets","find","t","_i$system$activities","a","_a$consumption","updateItemButtons","render","_onLeftClick","_x4","_callee13","_this$activity4","_callee13$","_context16","sheet","_onRightClick","_x5","_callee14","_get2","_len11","_key11","weapons","_this6","_args17","_callee14$","_context17","_item$consume","_this$item$system$use","_this$activity5","_this$item$system$amm","_this$activity6","uses","spent","consumeType","useAmmo","ammunition","_otherItem$system$use","_this$item$system$amm2","_ammoItem$system$quan","ammoItem","ammunitionOptions","Math","floor","getProperty","_chargesItem$uses$val","_chargesItem$uses","chargesItem","per","_activity$activation","_game$combat","activationType","_i4","_Object$entries4","_Object$entries4$_i","combatant","main","ItemButton","_ARGON$MAIN$BUTTONS$B","_getPanel2","_super13","_ref","_this7","itemsWithSpells","_spells","prePrepareSpells","preparedFlag","some","className","_game$modules$get2","_this8","spellLevels","itemsToIgnore","_this$items$0$system$","_step","IWSAPI","api","_iterator","_createForOfIteratorHelper","_item$flags$itemsWit","_loop4","itemsInSpell","isUsableItem","_item$system$uses","_item$system$uses2","s","n","f","magicItems","_item$flags$dnd5e","dnd5e","cachedFor","magicItemsMap","Map","current","set","_step2","_iterator2","_loop6","_step2$value","spells","requiresAttunement","isAttuned","_item$system$uses3","_item$system$uses4","showPreparedOnly","allowIfNotPrepared","preparation","mode","prepared","Infinity","pact","_loop5","_Object$entries5$_i","_Object$entries5","_i5","levelSpells","_callee15","_callee15$","_context18","BUTTON_PANELS","ACCORDION","AccordionPanel","accordionPanelCategories","_ref2","AccordionPanelCategory","ButtonPanel","_getPanel","ButtonPanelButton","_ARGON$MAIN$BUTTONS$A","_createChatMessage","_onLeftClick3","_getTooltipData3","_super14","specialItem","_this9","actorItem","getName","Item","documentClass","_this$item2","_callee16","_callee16$","_context19","_callee17","_game$modules$get3","useCE","_callee17$","_context20","dfreds","effectInterface","findEffect","effectName","toggleEffect","overlay","uuids","uuid","createChatMessage","_x6","_callee18","_callee18$","_context21","ChatMessage","user","speaker","token","alias","content","icon","ActionButton","DND5eMovementHud","_ARGON$MovementHud","_super15","_game$modules$get4","_this10","_len12","_key12","getMovementMode","_game$combat2","started","movement","movementMode","dimensions","MovementHud","DND5eButtonHud","_ARGON$ButtonHud","_getButtons9","_super16","_len13","_key13","_game$combat3","_callee19","_this11","_callee19$","_context22","longRest","shortRest","ButtonHud","DND5eWeaponSets","_ARGON$WeaponSets","_onSetChange2","_getSets2","_getDefaultSets","_super17","_callee20","_this$actor$flags","_actions$0$uuid","_actions$","_bonus$0$uuid","_bonus$","_actions$1$uuid","_actions$2","_bonus$1$uuid","_bonus$2","_actions$2$uuid","_actions$3","_bonus$2$uuid","_bonus$3","sets","isTransformed","actions","_callee20$","_context23","isPolymorphed","primary","secondary","getDefaultSets","_callee21","_this$actor$flags2","_i6","_Object$entries6","_Object$entries6$_i","slots","_callee21$","_context24","t1","foundry","utils","t2","t3","deepClone","mergeObject","fromUuid","t4","t5","_getSets","_callee22","_ref3","updates","activeSet","activeItems","inactiveSets","inactiveItems","_callee22$","_context25","flatMap","_item$system3","_id","_item$system4","updateEmbeddedDocuments","_onSetChange","_x7","WeaponSets","enableMacroPanel","mainPanels","PREFAB","MacroPanel","PassTurnPanel","definePortraitPanel","defineDrawerPanel","defineMainPanels","defineMovementHud","defineButtonHud","defineWeaponSets","defineTooltip","defineSupportedActorTypes","_x","_x2","_getTooltipDetails","_callee23","_item$labels4","_item$labels5","_damageTypes","_properties","title","itemType","subtitle","dt","damageTypes","properties","materialComponents","_item$system$descript","_item$labels","_item$labels2","_item$labels3","_i7","_Object$entries7","_Object$entries7$_i","_iterator3","_step3","comp","dmgString","tooltipProperties","_callee23$","_context26","labels","damages","d","damageType","weaponTypes","weaponType","itemActionTypes","weaponProperties","school","spellSchools","all","abbr","materials","consumableTypes","requirements","TextEditor","enrichHTML","relativeTo","toHit","dDmg","getDamageTypeIcon","_p$label","footerText","_damageType","toLowerCase","proficiency","condensedItems","barItemsLength","barItemsMultipleOfTwo","currentSplitButtonItemButton","isCondensedButton","arr","_arrayWithHoles","isArray","_iterableToArrayLimit","_s","_e","_r","_arr","_n","_d","_unsupportedIterableToArray","minLen","_arrayLikeToArray","toString","test","_nonIterableRest","len","arr2","registerSettings","registerSettingsArray","register","showWeaponsItems","scope","config","default","onChange","sett","showClassActions","condenseClassActions","macroPanel","requiresReload","switchEquip"],"sourceRoot":""}